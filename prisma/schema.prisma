// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  slug      String   @unique
  name      String?
  bio       String?
  url       String?
  avatarUrl String?
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  githubId  Int?

  Presentations      Presentation[]
  HostedPresentation HostedPresentation[]
  Plugin             Plugin[]
  Component          Component[]
  Theme              Theme[]
}

model Presentation {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  abstract  String?
  url       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]
}

model Session {
  id             Int          @id @default(autoincrement())
  presentation   Presentation @relation(fields: [presentationId], references: [id])
  presentationId Int
  location       String
  slides         String?
  url            String?
  video          String?
  status         Int          @default(1)
  date           DateTime
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model HostedPresentation {
  id        String   @id @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Plugin {
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  slug   String @unique
  tags   String
}

model Component {
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  slug   String @unique
  tags   String
}

model Theme {
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  slug   String @unique
  tags   String
}
